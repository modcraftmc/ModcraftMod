buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url='https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.0"
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'org.spongepowered.mixin'

group = 'fr.modcraftmc'
version = '1.0-SNAPSHOT'
archivesBaseName = 'ModcraftMod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                modcraftmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                modcraftmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'modcraftmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                modcraftmod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    jcenter()
}

configurations {
    shade
    compile.extendsFrom shade
}


shadowJar {
    configurations = [ project.configurations.shade ]
    classifier = 'shade'

}

reobf {
    shadowJar {}
}

jar.finalizedBy('reobfJar')

build.dependsOn shadowJar


dependencies {

    minecraft 'net.minecraftforge:forge:1.16.5-36.1.31'
    shade 'club.minnced:discord-webhooks:0.5.5-rc'
    shade ('net.dv8tion:JDA:4.2.0_228') {
        exclude module: 'opus-java'
    }
}

mixin {
    add sourceSets.main, "modcraftmod.refmap.json"
}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "modcraftmod",
                //"Specification-Vendor": "modcraftmod authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "MixinConnector"          : "fr.modcraftmc.modcraftmod.common.mixins.MixinConnector",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                //"Implementation-Vendor": "modcraftmod authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
